{# templates/solicitud/show.html.twig #}

{% extends 'base.html.twig' %}

{% block title %}Solicitud Quinquenio{% endblock %}

{% block body %}
    {# Header Section #}
    <h1 class="mb-4">
        <i class="fas fa-paper-plane" aria-hidden="true"></i> 
        Solicitud quinquenio - convocatoria {{ solicitud.convocatoria.nombre }}
    </h1>

    {# Solicitante Information Section #}
    <section aria-labelledby="datos-solicitante">
        <h2 id="datos-solicitante">Datos del Solicitante</h2>
        <table class="table table-striped">
            <tbody>
                <tr>
                    <th scope="row">DNI</th>
                    <td>{{ persona.dni }}</td>
                </tr>
                <tr>
                    <th scope="row">Nombre</th>
                    <td>{{ persona.nombre }}</td>
                </tr>
                <tr>
                    <th scope="row">Apellidos</th>
                    <td>{{ persona.apellidos }}</td>
                </tr>
                <tr>
                    <th scope="row">Fecha de Nacimiento</th>
                    <td>{{ persona.fechaNacimiento|date('Y-m-d') }}</td>
                </tr>
                <tr>
                    <th scope="row">Teléfono</th>
                    <td>{{ persona.telefono }}</td>
                </tr>
                <tr>
                    <th scope="row">Fecha de Solicitud</th>
                    <td>{{ solicitud.fechaEntrada|date('Y-m-d') }}</td>
                </tr>
            </tbody>
        </table>

        <div class="btn-group mb-4">
            <a href="{{ path('persona_show', {'id': persona.id}) }}" 
               class="btn btn-secondary" 
               aria-label="Ver detalles del solicitante">
                <i class="fas fa-user" aria-hidden="true"></i> Ver solicitante
            </a>
            <a href="{{ path('convocatoria_show', {'id': solicitud.convocatoria.id}) }}" 
               class="btn btn-secondary"
               aria-label="Ver detalles de la convocatoria">
                <i class="fas fa-bullhorn" aria-hidden="true"></i> Ver convocatoria
            </a>
        </div>
    </section>

    {# Meritos Section #}
    <section aria-labelledby="meritos-section">
                    <td>
                        {% set badgeClasses = {
                            0: 'badge bg-secondary',
                            1: 'badge bg-success',
                            2: 'badge bg-danger',
                            3: 'badge bg-warning'
                        } %}
                        <span class="{{ badgeClasses[merito.estado] }}">
                            {% if merito.estado == 0 %}
                                Pendiente
                            {% elseif merito.estado == 1 %}
                                Admitido
                            {% elseif merito.estado == 2 %}
                                Denegado
                            {% elseif merito.estado == 3 %}
                                Parcial
                            {% endif %}
                        </span>
                    </td>
                    <th scope="col">Categoría</th>
                    <th scope="col">Fecha Inicio</th>
                    <th scope="col">Fecha Fin</th>
                    <th scope="col">Días</th>
                    <th scope="col">Estado</th>
                    <th scope="col">Acciones</th>
                </tr>
            </thead>
            <tbody>
                {% for merito in meritos %}
                    <tr>
                        <td>{{ merito.id }}</td>
                        <td>{{ merito.organismo }}</td>
                        <td>{{ merito.categoriaId }}</td>
                        <td>{{ merito.fechaInicio|date('Y-m-d') }}</td>
                        <td>{{ merito.fechaFin|date('Y-m-d') }}</td>
                        <td>{{ merito.diasTranscurridos }}</td>                
                        <td>{% if merito.estado == 0 %}
                                <span class="badge bg-secondary">Pendiente</span>
                            {% elseif merito.estado == 1 %}
                                <span class="badge bg-success">Admitido</span>
                            {% elseif merito.estado == 2 %}
                                <span class="badge bg-danger">Denegado</span>
                            {% elseif merito.estado == 3 %}
                                <span class="badge bg-warning">Parcial</span>
                            {% endif %}
                        </td>
                        <td>
                            <button type="button" class="btn btn-warning btn-sm" data-bs-toggle="modal" data-bs-target="#addMeritoModal" data-action="edit" data-id="{{ merito.id }}">Editar</button>
                            <button type="button" class="btn btn-danger btn-sm delete-merito" 
                            data-id="{{ merito.id }}">Borrar</button>
                        </td>
                        
                    </tr>
                {% endfor %}
            </tbody>
        </table>

        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addMeritoModal" data-action="add">
            <i class="fas fa-plus"></i> Agregar Mérito
        </button>

        <!-- Modal -->
        <div class="modal fade" id="addMeritoModal" tabindex="-1" aria-labelledby="addMeritoModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addMeritoModalLabel">Agregar Mérito</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="meritoForm" method="post">
                            <input type="hidden" name="solicitud_id" value="{{ solicitud.id }}">
                            <div class="mb-3">
                                <label for="organismo" class="form-label">Organismo</label>
                                <input type="text" class="form-control" id="organismo" name="organismo">
                            </div>
                            <div class="mb-3">
                                <label for="categoriaId" class="form-label">Categoría ID</label>
                                <input type="number" class="form-control" id="categoriaId" name="categoriaId">
                            </div>
                            <div class="mb-3">
                                <label for="fechaInicio" class="form-label">Fecha Inicio</label>
                                <input type="date" class="form-control" id="fechaInicio" name="fechaInicio">
                            </div>
                            <div class="mb-3">
                                <label for="fechaFin" class="form-label">Fecha Fin</label>
                                <input type="date" class="form-control" id="fechaFin" name="fechaFin">
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Días</label>
                                <input type="text" class="form-control" id="duracion" readonly>
                            </div>
                            <script>
                                document.getElementById('fechaInicio').addEventListener('change', calcularDuracion);
                                document.getElementById('fechaFin').addEventListener('change', calcularDuracion);
                                
                                function calcularDuracion() {
                                    const inicio = new Date(document.getElementById('fechaInicio').value);
                                    const fin = new Date(document.getElementById('fechaFin').value);
                                    if (inicio && fin) {
                                        const diferencia = Math.ceil((fin - inicio) / (1000 * 60 * 60 * 24));
                                        document.getElementById('duracion').value = diferencia;
                                    }
                                }
                            </script>
                            <div class="mb-3">
                                <label for="estado" class="form-label">Estado</label>
                                <select class="form-select" id="estado" name="estado">
                                    <option value="0">Pendiente</option>
                                    <option value="1">Admitido</option>
                                    <option value="2">Denegado</option>
                                    <option value="3">Parcial</option>
                                </select>
                            </div>
                            <button type="submit" class="btn btn-primary">Guardar</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </section>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const modal = document.getElementById('addMeritoModal');
            const form = document.getElementById('meritoForm');

            modal.addEventListener('show.bs.modal', async function(event) {
                const button = event.relatedTarget;
                const action = button.dataset.action;
                const modalTitle = modal.querySelector('.modal-title');

                if (action === 'edit') {
                    const meritoId = button.dataset.id;
                    modalTitle.textContent = 'Editar Mérito';
                    form.setAttribute('action', `/merito/edit/${meritoId}`);

                    const response = await fetch(`/merito/${meritoId}/edit`);
                    const data = await response.json();
                    
                    // Rellenar el formulario con los datos
                    document.getElementById('organismo').value = data.organismo;
                    document.getElementById('categoriaId').value = data.categoriaId;
                    document.getElementById('fechaInicio').value = data.fechaInicio;
                    document.getElementById('fechaFin').value = data.fechaFin;
                    document.getElementById('estado').value = data.estado;
                } else {
                    modalTitle.textContent = 'Agregar Mérito';
                    form.setAttribute('action', '/merito/save');
                    form.reset();
                }
            });

            form.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const formData = new FormData(form);
                const method = form.getAttribute('method');
                
                try {
                    const response = await fetch(form.action, {
                        method: 'POST', // Siempre usamos POST por simplicidad
                        body: formData,
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    });

                    const data = await response.json();
                    
                    if (data.status === 'success') {
                        const modalInstance = bootstrap.Modal.getInstance(modal);
                        modalInstance.hide();
                        window.location.href = data.redirect;
                    } else {
                        alert(data.message);
                        console.error(data.errors);
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Ha ocurrido un error al procesar la solicitud');
                }
            });

            // Delete merit functionality
            document.querySelectorAll('.delete-merito').forEach(button => {
                button.addEventListener('click', function() {
                    if (confirm('¿Estás seguro de que quieres borrar este mérito?')) {
                        const meritoId = this.getAttribute('data-id');
                        fetch(`/merito/delete/${meritoId}`, {
                            method: 'POST',
                            headers: {
                                'X-Requested-With': 'XMLHttpRequest'
                            }
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                // Remove the row from the table
                                this.closest('tr').remove();
                            } else {
                                alert('Error al borrar el mérito');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            alert('Error al borrar el mérito');
                        });
                    }
                });
            });
        });
    </script>
{% endblock %}
