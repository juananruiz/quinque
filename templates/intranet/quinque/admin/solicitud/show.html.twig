{# templates/intranet/quinque/admin/solicitud/show.html.twig #}

{% extends 'intranet/quinque/admin/base.html.twig' %}

{% block title %}Solicitud Quinquenio{% endblock %}

{% block body %}
    {# Header Section #}
    <div class="row">
        <h1 class="col6 mb-3">
            <i class="fas fa-paper-plane text-warning" aria-hidden="true"></i> 
            Solicitud Quinquenio - Convocatoria {{ solicitud.convocatoria.nombre }}
        </h1>
    </div>
    {# Solicitante Information Section #}
    <section>
        <h2 class="h4 mt-4">Datos del Solicitante</h2>
        <div class="row bg-light p-3">
            <div class="col-3 border-end border-warning mb-2">
                <span class="text-secondary small">DNI</span>
                <br>{{ persona.dni }}
            </div>
            <div class="col-3 border-end border-warning mb-2">
                <span class="text-secondary small">Nombre completo</span>
                <br>{{ persona.nombre }} {{ persona.apellidos }}
            </div>
            <div class="col-3 border-end border-warning mb-2">
                <span class="text-secondary small">Departamento</span>
                <br>{{ persona.departamento.nombre }}
            </div>
            <div class="col-3 mb-2">
                <span class="text-secondary small">Correo</span>
                <br>{{ persona.email }}
            </div>
            <div class="col-3 border-end border-warning mb-2">
                <span class="text-secondary small">Fecha de Solicitud</span>
                <br>{{ solicitud.fechaEntrada|date('Y-m-d') }}
            </div>
            <div class="col-3 mb-2">
                <span class="text-secondary small">Estado solicitud</span>
                <br>
                <span class="badge" style="background-color: {{ solicitud.estado.color }}">
                    {{ solicitud.estado.nombre }}
                </span>
            </div>
            <div class="col-3 mb-2">
                <a href="{{ path('quinque_persona_show', {'id': persona.id}) }}"
                    class="btn btn-light btn-sm mt-3"> 
                    <i class="fas fa-user"></i> Ver solicitante
                </a>
            </div>
            <div class="col-3 mb-2">
                <a href="{{ path('quinque_convocatoria_show', {'id': solicitud.convocatoria.id}) }}"
                    class="btn btn-light btn-sm mt-3">
                    <i class="fas fa-bullhorn"></i> Ver convocatoria
                </a>
            </div>
        </div>
    </section>

    <section>
        <h2 class="h4 mt-4">Méritos aportados</h2>
        <div id="requisitos" class="row">
            <div class="col-md-6">
                {% if meritosComputados >= 1825 %}
                    <h5><span class="badge bg-success">Meritos admitidos:  {{ meritosComputados|dias_a_periodo }}</span></h5>
                {% else %}
                    <h5><span class="badge bg-danger">Meritos admitidos: {{ meritosComputados|dias_a_periodo }}</span></h5>
                {% endif %}
            </div>
            <div class="col-md-6 text-end">
                {# TODO: Evitar número mágico #}
            {% if meritosComputados >= 1825 %}
                <a href="{{ path('quinque_solicitud_pdf', {'id': solicitud.id}) }}" type="button" class="btn btn-primary me-2">
                    <i class="fas fa-file-pdf"></i> Generar resolución estimatoria
                </a>
            {% else %}
                <a href="{{ path('quinque_solicitud_pdf', {'id': solicitud.id}) }}" type="button" class="btn btn-primary me-2">
                    <i class="fas fa-file-pdf"></i> Generar resolución desestimatoria
                </a>
            {% endif %}
            </div>
        </div>
        {% if meritos is defined and meritos|length > 0 %}
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">ID</th>
                        <th scope="col">Organismo</th>
                        <th scope="col">Categoría</th>
                        <th scope="col">Fecha Inicio</th>
                        <th scope="col">Fecha Fin</th>
                        <th scope="col">Dedicación</th>
                        <th scope="col">Días</th>
                        <th scope="col">Estado</th>
                        <th scope="col">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    {% for merito in meritos %}
                        <tr>
                            <td>{{ merito.id }}</td>
                            <td>{{ merito.organismo }}</td>
                            <td>{{ merito.categoria.abreviatura }}</td>
                            <td>{{ merito.fechaInicio|date('Y-m-d') }}</td>
                            <td>{{ merito.fechaFin|date('Y-m-d') }}</td>
                            <td>{{ merito.dedicacion }}</td>
                            <td>{{ merito.diasTranscurridos }}</td>
                            <td>
                                <span class="badge" style="background-color: {{ merito.estado.color }}">
                                    {{ merito.estado.nombre }}
                                </span>
                            </td>
                            <td>
                                <button type="button" class="btn btn-warning btn-sm" data-bs-toggle="modal" data-bs-target="#addMeritoModal" data-action="edit" data-id="{{ merito.id }}">
                                    <i class="fas fa-edit"></i> Editar
                                </button>
                                <button type="button" class="btn btn-danger btn-sm delete-merito" data-id="{{ merito.id }}">
                                    <i class="fas fa-trash"></i> Borrar
                                </button>
                            </td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        {% else %}
            <div class="alert alert-info">
                No hay méritos registrados todavía.
            </div>
        {% endif %}

        <button type="button" class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#addMeritoModal" data-action="add">
            <i class="fas fa-plus"></i> Agregar Mérito
        </button>
        <a href="{{ path('quinque_solicitud_edit', {'id': solicitud.id}) }}"
            class="btn btn-warning mb-3 text-end"><i class="fas fa-edit"></i> Editar solicitud
        </a>

        <!-- Modal -->
        <div class="modal fade" id="addMeritoModal" tabindex="-1" aria-labelledby="addMeritoModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addMeritoModalLabel">Agregar Mérito</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        {{ form_start(form, {'action': path('quinque_merito_save', {'solicitudId': solicitud.id}), 'attr': {'id': 'meritoForm'}}) }}
                            <input type="hidden" id="merito_id" name="merito_id" value="">
                            {{ include('intranet/quinque/admin/merito/_form.html.twig') }}
                        {{ form_end(form) }}
                    </div>
                </div>
            </div>
        </div>
    </section>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const modal = document.getElementById('addMeritoModal');
            const form = document.getElementById('meritoForm');

            modal.addEventListener('show.bs.modal', async function(event) {
                const button = event.relatedTarget;
                const action = button.dataset.action;
                const modalTitle = modal.querySelector('.modal-title');
                const form = document.getElementById('meritoForm');
                
                if (action === 'edit') {
                    const meritoId = button.dataset.id;
                    modalTitle.textContent = 'Editar Mérito';
                    form.action = `{{ path("quinque_merito_edit", {"id": ":meritoId"}) }}`.replace(':meritoId', meritoId);
                    document.getElementById('merito_id').value = meritoId;
                    
                    try {
                        const response = await fetch(`{{ path("quinque_merito_edit_data", {"id": ":meritoId"}) }}`.replace(':meritoId', meritoId));
                        const data = await response.json();
                        
                        if (data.status === 'success') {
                            // Rellenar el formulario con los datos
                            document.getElementById('merito_organismo').value = data.merito.organismo;
                            document.getElementById('merito_categoria').value = data.merito.categoriaId;
                            document.getElementById('merito_fechaInicio').value = data.merito.fechaInicio;
                            document.getElementById('merito_fechaFin').value = data.merito.fechaFin;
                            document.getElementById('merito_estado').value = data.merito.estadoId;
                            document.getElementById('merito_dedicacion').value = data.merito.dedicacion || '';
                            document.getElementById('merito_observaciones').value = data.merito.observaciones || '';
                        } else {
                            console.error('Error al cargar los datos del mérito:', data.message);
                        }
                    } catch (error) {
                        console.error('Error al cargar los datos del mérito:', error);
                    }
                } else {
                    modalTitle.textContent = 'Agregar Mérito';
                    form.reset();
                }
            });

            form.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const formData = new FormData(form);
                
                try {
                    const response = await fetch(form.action, {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    });

                    const data = await response.json();
                    
                    if (data.status === 'success') {
                        const modalInstance = bootstrap.Modal.getInstance(modal);
                        modalInstance.hide();
                        window.location.href = data.redirect;
                    } else {
                        alert(data.message);
                        console.error(data.errors);
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Ha ocurrido un error al procesar el formulario');
                }
            });

            // Manejo de eliminación de méritos
            document.querySelectorAll('.delete-merito').forEach(button => {
                button.addEventListener('click', async function() {
                    if (confirm('¿Está seguro de que desea eliminar este mérito?')) {
                        const meritoId = this.dataset.id;
                        try {
                            const response = await fetch(`{{ path("quinque_merito_delete", {"id": ":meritoId"}) }}`.replace(':meritoId', meritoId), {
                                method: 'DELETE',
                                headers: {
                                    'X-Requested-With': 'XMLHttpRequest'
                                }
                            });

                            const data = await response.json();
                            
                            if (data.status === 'success') {
                                window.location.reload();
                            } else {
                                alert(data.message);
                            }
                        } catch (error) {
                            console.error('Error:', error);
                            alert('Ha ocurrido un error al eliminar el mérito');
                        }
                    }
                });
            });
        });
    </script>
{% endblock %}
