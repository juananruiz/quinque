{# templates/intranet/quinque/admin/solicitud/show.html.twig #}

{% extends 'intranet/quinque/admin/base.html.twig' %}

{% block title %}Solicitud Quinquenio{% endblock %}

{% block body %}
    {# Header Section #}
    <h1 class="mb-3">
        <i class="fas fa-paper-plane text-warning" aria-hidden="true"></i> 
        Solicitud quinquenio - convocatoria {{ solicitud.convocatoria.nombre }}
    </h1>

    {# Solicitante Information Section #}
    <section aria-labelledby="datos-solicitante">
        <h2 id="datos-solicitante">Datos del Solicitante</h2>
        <table class="table table-striped">
            <tbody>
                <tr>
                    <th>DNI</th>
                    <td>{{ persona.dni }}</td>
                </tr>
                <tr>
                    <th>Nombre completo</th>
                    <td>{{ persona.nombre }} {{ persona.apellidos }}</td>
                </tr>
                <tr>
                    <th>Departamento</th>
                    <td>{{ persona.departamento.nombre }}</td>
                <tr>
                    <th>Correo</th>
                    <td>{{ persona.email }}</td>
                </tr>
                <tr>
                    <th>Fecha de Solicitud</th>
                    <td>{{ solicitud.fechaEntrada|date('Y-m-d') }}</td>
                </tr>
            </tbody>
        </table>

        <div class="btn-group mb-4">
            <a href="{{ path('quinque_persona_show', {'id': persona.id}) }}"
               class="btn btn-secondary" 
               aria-label="Ver detalles del solicitante">
                <i class="fas fa-user" aria-hidden="true"></i> Ver solicitante
            </a>
            <a href="{{ path('quinque_convocatoria_show', {'id': solicitud.convocatoria.id}) }}"
               class="btn btn-secondary"
               aria-label="Ver detalles de la convocatoria">
                <i class="fas fa-bullhorn" aria-hidden="true"></i> Ver convocatoria
            </a>
        </div>
    </section>

    {# Meritos Section #}
    <section aria-labelledby="meritos-section">
        <h2 id="meritos-section">Méritos</h2>
        <div id="requisitos" class="row">
            <div class="col-md-6">
                <strong>Meritos computados:</strong> 
                {{ meritosComputados|dias_a_periodo }}
            </div>
            <div class="col-md-6 text-end">
                {# TODO: Evitar número mágico #}
            {% if meritosComputados >= 1825 %}
                <button type="button" class="btn btn-primary me-2" data-action="imprimir">
                <i class="fas fa-file-pdf"></i> Generar resolución 
                </button>
            {% else %}
                <p class="badge bg-danger">No cumple los requisitos para el quinquenio</p>
            {% endif %}
            </div>
        </div>
        {% if meritos is defined and meritos|length > 0 %}
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">ID</th>
                        <th scope="col">Organismo</th>
                        <th scope="col">Categoría</th>
                        <th scope="col">Fecha Inicio</th>
                        <th scope="col">Fecha Fin</th>
                        <th scope="col">Días</th>
                        <th scope="col">Estado</th>
                        <th scope="col">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    {% for merito in meritos %}
                        <tr>
                            <td>{{ merito.id }}</td>
                            <td>{{ merito.organismo }}</td>
                            <td>{{ merito.categoria.abreviatura }}</td>
                            <td>{{ merito.fechaInicio|date('Y-m-d') }}</td>
                            <td>{{ merito.fechaFin|date('Y-m-d') }}</td>
                            <td>{{ merito.diasTranscurridos }}</td>
                            <td>
                                <span class="badge" style="background-color: {{ merito.estado.color }}">
                                    {{ merito.estado.nombre }}
                                </span>
                            </td>
                            <td>
                                <button type="button" class="btn btn-warning btn-sm" data-bs-toggle="modal" data-bs-target="#addMeritoModal" data-action="edit" data-id="{{ merito.id }}"><i class="fas fa-edit"></i> Editar</button>
                                <button type="button" class="btn btn-danger btn-sm delete-merito" 
                                data-id="{{ merito.id }}"><i class="fas fa-trash"></i> Borrar</button>
                            </td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        {% else %}
            <div class="alert alert-info">
                No hay méritos registrados todavía.
            </div>
        {% endif %}

        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addMeritoModal" data-action="add">
            <i class="fas fa-plus"></i> Agregar Mérito
        </button>

        <!-- Modal -->
        <div class="modal fade" id="addMeritoModal" tabindex="-1" aria-labelledby="addMeritoModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addMeritoModalLabel">Agregar Mérito</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        {{ include('intranet/quinque/admin/merito/_form.html.twig') }}
                    </div>
                </div>
            </div>
        </div>
    </section>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const modal = document.getElementById('addMeritoModal');
            const form = document.getElementById('meritoForm');

            modal.addEventListener('show.bs.modal', async function(event) {
                const button = event.relatedTarget;
                const action = button.dataset.action;
                const modalTitle = modal.querySelector('.modal-title');
                const meritoId = button.dataset.id;

                if (action === 'edit') {
                    const meritoId = button.dataset.id;
                    modalTitle.textContent = 'Editar Mérito';
                    // Establece la acción con la ruta del controlador para grabar los cambios
                    form.setAttribute('action', '{{ path("quinque_merito_save", {"id": ":meritoId"}) }}');
                    form.setAttribute('action', form.getAttribute('action').replace(':meritoId', meritoId));

                    // Llama a la API del controlador que devuelve los datos del mérito
                   const response = await fetch(`{{ path("quinque_merito_edit_data", {"id": ":meritoId"}) }}`.replace(':meritoId', meritoId));
                    const data = await response.json();	
                    
                    // Rellena el formulario con los datos
                    document.getElementById('organismo').value = data.organismo;
                    document.getElementById('categoriaId').value = data.categoriaId;
                    document.getElementById('fechaInicio').value = data.fechaInicio;
                    document.getElementById('fechaFin').value = data.fechaFin;
                    document.getElementById('estadoId').value = data.estadoId;
                } else {
                    modalTitle.textContent = 'Agregar Mérito';
                    form.setAttribute('action', '{{ path("quinque_merito_save") }}');
                    form.reset();
                }
            });

            form.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const formData = new FormData(form);
                const method = form.getAttribute('method');
                
                try {
                    const response = await fetch(form.action, {
                        method: 'POST', // Siempre usamos POST por simplicidad
                        body: formData,
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    });

                    const data = await response.json();
                    
                    if (data.status === 'success') {
                        const modalInstance = bootstrap.Modal.getInstance(modal);
                        modalInstance.hide();
                        window.location.href = data.redirect;
                    } else {
                        alert(data.message);
                        console.error(data.errors);
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Ha ocurrido un error al procesar la solicitud');
                }
            });

            // Delete merit functionality
            document.querySelectorAll('.delete-merito').forEach(button => {
                button.addEventListener('click', function() {
                    if (confirm('¿Estás seguro de que quieres borrar este mérito?')) {
                        const meritoId = this.getAttribute('data-id');
                        fetch(
                            '{{ path("quinque_merito_delete", {"id": ":meritoId"}) }}'.replace(':meritoId', meritoId), 
                            {
                                method: 'POST',
                                headers: {
                                    'X-Requested-With': 'XMLHttpRequest'
                                }
                            }
                        )
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                // Remove the row from the table
                                this.closest('tr').remove();
                            } else {
                                alert('Error al borrar el mérito');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            alert('Error al borrar el mérito');
                        });
                    }
                });
            });
        });
    </script>
{% endblock %}
