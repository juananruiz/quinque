{# templates/intranet/peticion/gestor/solicitud/show.html.twig #}
{% extends 'intranet/quinque/admin/base.html.twig' %}

{% block title %}Detalles de la Solicitud{% endblock %}
 
{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Function to handle comment editing
            function setupCommentEdit(editBtn, commentId) {
                const commentDiv = editBtn.closest('.comment-container');
                const contentP = commentDiv.querySelector('.comment-content');
                const editForm = commentDiv.querySelector('.edit-form');
                const textarea = editForm.querySelector('textarea');
                const modifiedAtSpan = commentDiv.querySelector('.modified-at');
                
                editBtn.addEventListener('click', function() {
                    contentP.style.display = 'none';
                    editForm.style.display = 'block';
                    textarea.value = contentP.textContent.trim();
                    textarea.focus();
                });

                editForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    
                    const formData = new FormData();
                    formData.append('content', textarea.value);

                    fetch(editForm.action, {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            contentP.innerHTML = data.content;
                            if (modifiedAtSpan) {
                                modifiedAtSpan.textContent = `(Modificado el ${data.modifiedAt})`;
                            }
                            editForm.style.display = 'none';
                            contentP.style.display = 'block';
                            
                            // Mostrar mensaje de éxito
                            const alert = document.createElement('div');
                            alert.className = 'alert alert-success alert-dismissible fade show mt-2';
                            alert.innerHTML = `
                                ${data.message}
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            `;
                            commentDiv.appendChild(alert);
                            
                            // Eliminar la alerta después de 3 segundos
                            setTimeout(() => {
                                alert.remove();
                            }, 3000);
                        } else {
                            throw new Error(data.error || 'Error al actualizar el comentario');
                        }
                    })
                    .catch(error => {
                        const alert = document.createElement('div');
                        alert.className = 'alert alert-danger alert-dismissible fade show mt-2';
                        alert.innerHTML = `
                            ${error.message}
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        `;
                        commentDiv.appendChild(alert);
                    });
                });
            }

            // Setup edit buttons
            document.querySelectorAll('.edit-comment-btn').forEach(btn => {
                const commentId = btn.dataset.commentId;
                setupCommentEdit(btn, commentId);
            });

            // Setup new comment form
            document.querySelector('.new-comment-form').addEventListener('submit', function(e) {
                e.preventDefault();
                const form = e.target;
                const textarea = form.querySelector('textarea');
                const formData = new FormData();
                formData.append('content', textarea.value);

                fetch(form.action, {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Create new comment HTML
                        const newComment = document.createElement('div');
                        newComment.className = 'mb-3 pb-3 border-bottom comment-container';
                        newComment.innerHTML = `
                            <div class="d-flex justify-content-between align-items-start">
                                <p class="mb-1 comment-content">${data.content}</p>
                                <div>
                                    <button type="button" class="btn btn-warning btn-sm edit-comment-btn" data-comment-id="${data.id}">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <form method="post" action="/intranet/peticion/gestor/comentario/${data.id}/delete" class="d-inline" onsubmit="return confirm('¿Está seguro de que desea eliminar este comentario?');">
                                        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ 'TEMP_ID') }}">
                                        <button type="submit" class="btn btn-danger btn-sm">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </form>
                                </div>
                            </div>
                            <form class="edit-form mt-2" style="display: none;" action="/intranet/peticion/gestor/comentario/${data.id}/edit" method="POST">
                                <div class="form-group">
                                    <textarea class="form-control mb-2" rows="3" name="content">${data.content}</textarea>
                                </div>
                                <button type="submit" class="btn btn-success btn-sm">Guardar</button>
                                <button type="button" class="btn btn-secondary btn-sm" onclick="this.closest('.edit-form').style.display='none'; this.closest('.comment-container').querySelector('.comment-content').style.display='block';">
                                    Cancelar
                                </button>
                            </form>
                            <small class="text-muted d-block">
                                Creado el ${data.createdAt}
                            </small>
                        `;

                        // Add new comment to the list
                        const cardBody = document.querySelector('.card-body');
                        const noCommentsMessage = document.getElementById('no-comments-message');
                        if (noCommentsMessage) {
                            noCommentsMessage.style.display = 'none';
                        }

                        // Append the new comment at the end of the comments list
                        const newCommentForm = document.getElementById('new-comment-form');
                        newCommentForm.insertAdjacentElement('beforebegin', newComment);

                        // Setup edit functionality for new comment
                        const newEditBtn = newComment.querySelector('.edit-comment-btn');
                        setupCommentEdit(newEditBtn, data.id);

                        // Clear form and hide it
                        textarea.value = '';
                        hideNewCommentForm();

                        // Update comment count
                        const countElement = document.querySelector('.card-header h5');
                        const currentCount = parseInt(countElement.textContent.match(/\d+/)[0]);
                        countElement.innerHTML = `<i class="fas fa-comments"></i> Comentarios (${currentCount + 1})`;

                        // Show success message
                        const alert = document.createElement('div');
                        alert.className = 'alert alert-success alert-dismissible fade show mt-2';
                        alert.innerHTML = `
                            ${data.message}
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        `;
                        newComment.appendChild(alert);

                        // Remove alert after 3 seconds
                        setTimeout(() => {
                            alert.remove();
                        }, 3000);
                    } else {
                        throw new Error(data.error || 'Error al crear el comentario');
                    }
                })
                .catch(error => {
                    const alert = document.createElement('div');
                    alert.className = 'alert alert-danger alert-dismissible fade show mt-2';
                    alert.innerHTML = `
                        ${error.message}
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    `;
                    form.appendChild(alert);
                });
            });
        });

        function hideNewCommentForm() {
            const form = document.getElementById('new-comment-form');
            form.style.display = 'none';
            form.querySelector('textarea').value = '';
        }
    </script>
    <script>
        function hideNewCommentForm() {
            document.getElementById('new-comment-form').style.display = 'none';
            document.getElementById('no-comments-message').style.display = 'block';
        }
    </script>
{% endblock %}

{% block body %}
    {{ parent() }}
    <div class="container-fluid">
        <div class="row">
            <!-- Main content area -->
            <div class="col-md-9">
                <div class="row mb-3">
                    <div class="col">
                        <h2>{{ solicitud.asunto }}</h2>
                    </div>
                </div>
                 <div class="card mb-4">
                    <div class="card-body">
                    <p>{{ solicitud.contenido|nl2br }}</p>
                    </div>
                </div>
                <div class="card mb-4">
                    <div class="card-header">
                        <div class="d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">
                                <i class="fas fa-comments"></i> Comentarios ({{ solicitud.comentarios|length }})
                            </h5>
                            <button type="button" 
                                    class="btn btn-primary btn-sm" 
                                    id="new-comment-btn" onclick="document.getElementById('new-comment-form').style.display = 'block'; document.getElementById('no-comments-message').style.display = 'none';">
                                <i class="fas fa-plus"></i> Nuevo comentario
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        {% if solicitud.comentarios is empty %}
                            <p class="text-muted" id="no-comments-message">No hay comentarios todavía.</p>
                        {% else %}
                            {% for comentario in solicitud.comentarios %}
                                <div class="mb-3 pb-3 border-bottom comment-container">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <p class="mb-1 comment-content">{{ comentario.contenido|nl2br }}</p>
                                        <div>
                                            <button type="button" 
                                                    class="btn btn-warning btn-sm edit-comment-btn" 
                                                    data-comment-id="{{ comentario.id }}">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <form method="post" action="{{ path('app_peticion_comentario_delete', {'id': comentario.id}) }}" 
                                                  class="d-inline" 
                                                  onsubmit="return confirm('¿Está seguro de que desea eliminar este comentario?');">
                                                <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ comentario.id) }}">
                                                <button type="submit" class="btn btn-danger btn-sm">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                    <form class="edit-form mt-2" style="display: none;" 
                                          action="{{ path('app_peticion_comentario_edit', {'id': comentario.id}) }}" 
                                          method="POST">
                                        <div class="form-group">
                                            <textarea class="form-control mb-2" rows="3" name="content">{{ comentario.contenido }}</textarea>
                                        </div>
                                        <button type="submit" class="btn btn-success btn-sm">Guardar</button>
                                        <button type="button" class="btn btn-secondary btn-sm" 
                                                onclick="this.closest('.edit-form').style.display='none';
                                                         this.closest('.comment-container').querySelector('.comment-content').style.display='block';">
                                            Cancelar
                                        </button>
                                    </form>
                                    <small class="text-muted d-block">
                                        Creado el {{ comentario.createdAt|date('d/m/Y H:i') }}
                                        {% if comentario.modifiedAt %}
                                            <span class="modified-at">(Modificado el {{ comentario.modifiedAt|date('d/m/Y H:i') }})</span>
                                        {% endif %}
                                    </small>
                                </div>
                            {% endfor %}
                        {% endif %}
                        
                        {# Formulario para nuevo comentario #}
                        <div id="new-comment-form" class="mb-3 pb-3 border-bottom" style="display: none;">
                            <form class="new-comment-form" action="{{ path('app_peticion_comentario_new', {'solicitud_id': solicitud.id}) }}" method="POST">
                                <div class="form-group">
                                    <textarea class="form-control mb-2" rows="3" name="content" required></textarea>
                                </div>
                                <button type="submit" class="btn btn-success btn-sm">Guardar</button>
                                <button type="button" class="btn btn-secondary btn-sm" onclick="hideNewCommentForm()">Cancelar</button>
                            </form>
                        </div>
                    </div>
                </div>

                <div class="mb-3">
                    <a href="{{ path('app_peticion_solicitud_index') }}" 
                       class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Volver a las peticiones
                    </a>
                </div>
            </div>

            <!-- Right panel with request details -->
            <div class="col-md-3">
                <div class="card">
                    <div class="card-body">
                        <div class="mb-3">
                            <label class="small text-muted">Unidad</label>
                            <div>{{ solicitud.unidad.nombre }}</div>
                        </div>
                        <div class="mb-3">
                            <label class="small text-muted">Solicitante</label>
                            <div>{{ solicitud.solicitante.nombre }}</div>
                        </div>
                        <div class="mb-3">
                            <label class="small text-muted">Asignado a</label>
                            <div>{{ solicitud.asignado ? solicitud.asignado.nombre : 'Sin asignar' }}</div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <a href="{{ path('app_peticion_solicitud_edit', {'id': solicitud.id}) }}" 
                        class="btn btn-warning">
                            <i class="fas fa-edit"></i> Editar
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}