{# templates/intranet/peticion/solicitud/index.html.twig #}
{% extends 'intranet/quinque/admin/base.html.twig' %}

{% block title %}Solicitudes{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="{{ asset('assets/css/dataTables.bootstrap5.min.css') }}" rel="stylesheet">
    <link href="{{ asset('assets/css/filters.css') }}" rel="stylesheet">
{% endblock %}

{% block body %}
    <div class="row mb-3">
        <div class="col-6">
            <h1 class=""><i class="fas fa-file-alt text-warning"></i> Solicitudes</h1>
        </div>
        <div class="col-6 text-end">
            <a href="{{ path('app_peticion_solicitud_new') }}" class="btn btn-primary mt-3">
                <i class="fas fa-plus"></i> Nueva Solicitud
            </a>
        </div>
    </div>

    {# Barra de filtros #}
    <div class="filters-bar">
        <div class="filter-controls">
            <div class="filter-item">
                <div class="filter-dropdown">
                    <button class="filter-button" onclick="toggleFilter('estado')">
                        Estado <i class="fas fa-chevron-down"></i>
                    </button>
                    <div id="estadoFilter" class="filter-dropdown-content">
                        {% for estado in estados %}
                            <div class="form-check">
                                <input class="form-check-input filter-checkbox" type="checkbox" 
                                       value="{{ estado.id }}" id="estado{{ estado.id }}"
                                       data-filter-type="estado" data-filter-label="{{ estado.nombre }}">
                                <label class="form-check-label" for="estado{{ estado.id }}">
                                    {{ estado.nombre }}
                                </label>
                            </div>
                        {% endfor %}
                    </div>
                </div>
            </div>

            <div class="filter-item">
                <div class="filter-dropdown">
                    <button class="filter-button" onclick="toggleFilter('unidad')">
                        Unidad <i class="fas fa-chevron-down"></i>
                    </button>
                    <div id="unidadFilter" class="filter-dropdown-content">
                        {% for unidad in unidades %}
                            <div class="form-check">
                                <input class="form-check-input filter-checkbox" type="checkbox" 
                                       value="{{ unidad.id }}" id="unidad{{ unidad.id }}"
                                       data-filter-type="unidad" data-filter-label="{{ unidad.nombre }}">
                                <label class="form-check-label" for="unidad{{ unidad.id }}">
                                    {{ unidad.nombre }}
                                </label>
                            </div>
                        {% endfor %}
                    </div>
                </div>
            </div>

            <div class="filter-item">
                <div class="filter-dropdown">
                    <button class="filter-button" onclick="toggleFilter('fecha')">
                        Fecha <i class="fas fa-chevron-down"></i>
                    </button>
                    <div id="fechaFilter" class="filter-dropdown-content">
                        <div class="mb-2">
                            <label for="fechaDesde" class="form-label">Desde:</label>
                            <input type="date" class="form-control" id="fechaDesde">
                        </div>
                        <div class="mb-2">
                            <label for="fechaHasta" class="form-label">Hasta:</label>
                            <input type="date" class="form-control" id="fechaHasta">
                        </div>
                        <button class="btn btn-primary btn-sm w-100" onclick="aplicarFiltroFecha()">
                            Aplicar
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="active-filters" id="activeFilters"></div>
    </div>

    <div class="container mb-3">
        <table id="solicitudes" class="table table-striped table-bordered mb-3">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Asunto</th>
                    <th>Unidad</th>
                    <th>Solicitante</th>
                    <th>Estado</th>
                    <th>Fecha</th>
                    <th>Comentarios</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
            {% for solicitud in solicitudes %}
                <tr>
                    <td>{{ solicitud.id }}</td>
                    <td>{{ solicitud.asunto }}</td>
                    <td>{{ solicitud.unidad.nombre|slice(0, 100) }}{% if solicitud.unidad.nombre|length > 100 %}...{% endif %}</td>
                    <td>{{ solicitud.solicitante.apellidos }}, {{ solicitud.solicitante.nombre }}</td>
                    <td>
                        <span class="badge bg-{{ solicitud.estado.color }}">
                            {{ solicitud.estado.nombre }}
                        </span>
                    </td>
                    <td data-order="{{ solicitud.fechaCreacion|date('Y-m-d') }}">
                        {{ solicitud.fechaCreacion|date('d/m/Y') }}
                    </td>
                    <td>{{ solicitud.comentarios|length }}</td>
                    <td>
                        <a href="{{ path('app_peticion_solicitud_show', {'id': solicitud.id}) }}" 
                           class="btn btn-info btn-sm">
                            <i class="fas fa-search"></i> Ver
                        </a>
                        <a href="{{ path('app_peticion_solicitud_edit', {'id': solicitud.id}) }}" 
                           class="btn btn-warning btn-sm">
                            <i class="fas fa-edit"></i> Editar
                        </a>
                    </td>
                </tr>
            {% else %}
                <tr>
                    <td colspan="8">No hay solicitudes registradas</td>
                </tr>
            {% endfor %}
            </tbody>
        </table>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('assets/js/jquery.dataTables.min.js') }}"></script>
    <script src="{{ asset('assets/js/dataTables.bootstrap5.min.js') }}"></script>
    <script>
        let table;
        let activeFilters = {};

        $(document).ready(function() {
            table = $('#solicitudes').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.24/i18n/Spanish.json"
                },
                "order": [[5, "desc"]], // Ordenar por fecha de creación por defecto
                "initComplete": function() {
                    // Inicializar los filtros después de que la tabla esté lista
                    initializeFilters();
                }
            });
        });

        function toggleFilter(filterId) {
            const dropdown = document.getElementById(filterId + 'Filter');
            // Cerrar otros dropdowns
            document.querySelectorAll('.filter-dropdown-content').forEach(el => {
                if (el.id !== filterId + 'Filter') {
                    el.classList.remove('show');
                }
            });
            dropdown.classList.toggle('show');
            
            // Cerrar dropdown al hacer clic fuera
            document.addEventListener('click', function(event) {
                if (!event.target.closest('.filter-dropdown')) {
                    dropdown.classList.remove('show');
                }
            });
        }

        function initializeFilters() {
            // Inicializar listeners para checkboxes
            document.querySelectorAll('.filter-checkbox').forEach(checkbox => {
                checkbox.addEventListener('change', function() {
                    const filterType = this.dataset.filterType;
                    const filterValue = this.value;
                    const filterLabel = this.dataset.filterLabel;

                    if (this.checked) {
                        addActiveFilter(filterType, filterValue, filterLabel);
                    } else {
                        removeActiveFilter(filterType, filterValue);
                    }
                    applyFilters();
                });
            });
        }

        function addActiveFilter(type, value, label) {
            if (!activeFilters[type]) {
                activeFilters[type] = [];
            }
            activeFilters[type].push({value: value, label: label});
            updateActiveFiltersDisplay();
        }

        function removeActiveFilter(type, value) {
            if (activeFilters[type]) {
                activeFilters[type] = activeFilters[type].filter(f => f.value !== value);
                if (activeFilters[type].length === 0) {
                    delete activeFilters[type];
                }
            }
            updateActiveFiltersDisplay();
        }

        function updateActiveFiltersDisplay() {
            const container = document.getElementById('activeFilters');
            container.innerHTML = '';

            Object.entries(activeFilters).forEach(([type, filters]) => {
                filters.forEach(filter => {
                    const filterElement = document.createElement('span');
                    filterElement.className = 'active-filter';
                    filterElement.innerHTML = `${type}: ${filter.label} <span class="remove-filter" onclick="removeActiveFilter('${type}', '${filter.value}')">&times;</span>`;
                    container.appendChild(filterElement);
                });
            });

            applyFilters();
        }

        function applyFilters() {
            table.draw();
        }

        function aplicarFiltroFecha() {
            const desde = document.getElementById('fechaDesde').value;
            const hasta = document.getElementById('fechaHasta').value;

            if (desde || hasta) {
                activeFilters.fecha = [{
                    value: {desde: desde, hasta: hasta},
                    label: `${desde || 'inicio'} - ${hasta || 'fin'}`
                }];
            } else {
                delete activeFilters.fecha;
            }

            updateActiveFiltersDisplay();
            document.getElementById('fechaFilter').classList.remove('show');
        }

        // Extensión de DataTables para el filtrado personalizado
        $.fn.dataTable.ext.search.push(function(settings, data, dataIndex) {
            let showRow = true;

            // Filtrar por estado
            if (activeFilters.estado && activeFilters.estado.length > 0) {
                const estado = data[4]; // Índice de la columna estado
                showRow = activeFilters.estado.some(f => estado.includes(f.label));
            }

            // Filtrar por unidad
            if (showRow && activeFilters.unidad && activeFilters.unidad.length > 0) {
                const unidad = data[2]; // Índice de la columna unidad
                showRow = activeFilters.unidad.some(f => unidad.includes(f.label));
            }

            // Filtrar por fecha
            if (showRow && activeFilters.fecha && activeFilters.fecha.length > 0) {
                const fecha = data[5]; // Índice de la columna fecha
                const fechaValue = moment(fecha, 'DD/MM/YYYY').format('YYYY-MM-DD');
                const {desde, hasta} = activeFilters.fecha[0].value;

                if (desde && fechaValue < desde) showRow = false;
                if (hasta && fechaValue > hasta) showRow = false;
            }

            return showRow;
        });
    </script>
{% endblock %}